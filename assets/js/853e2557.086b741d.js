"use strict";(self.webpackChunkyoyoyojoe_github_io=self.webpackChunkyoyoyojoe_github_io||[]).push([[8493],{4137:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>f});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},i=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),p=l(n),d=a,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||r;return n?o.createElement(f,s(s({ref:t},i),{},{components:n})):o.createElement(f,s({ref:t},i))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=d;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u[p]="string"==typeof e?e:a,s[1]=u;for(var l=2;l<r;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6706:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>u,toc:()=>l});var o=n(7462),a=(n(7294),n(4137));const r={},s="React",u={unversionedId:"react/react",id:"react/react",title:"React",description:"Did you know that, if you are using npx create-react-app my-app, there are certain names you cannot use?",source:"@site/docs/react/react.md",sourceDirName:"react",slug:"/react/",permalink:"/docs/react/",draft:!1,editUrl:"https://github.com/yoyoyojoe/yoyoyojoe.github.io/tree/main/docs/react/react.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Django",permalink:"/docs/python/django"},next:{title:"Regex",permalink:"/docs/regex"}},c={},l=[{value:"Props",id:"props",level:2},{value:"Multiple props",id:"multiple-props",level:3},{value:"Hooks",id:"hooks",level:2},{value:"Custom Hooks",id:"custom-hooks",level:3},{value:"<code>useMount</code>",id:"usemount",level:4},{value:"<code>useUnmount</code>",id:"useunmount",level:4},{value:"useUpdateEffect",id:"useupdateeffect",level:4},{value:"<code>useSetState</code>",id:"usesetstate",level:4}],i={toc:l};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"react"},"React"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Did you know that, if you are using ",(0,a.kt)("inlineCode",{parentName:"p"},"npx create-react-app my-app"),", there are certain names you cannot use?"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'% npx create-react-app react \nCannot create a project named "react" because a dependency with the same name exists.\nDue to the way npm works, the following names are not allowed:\n\n  react\n  react-dom\n  react-scripts\n\nPlease choose a different project name.\n'))),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)("h3",{id:"multiple-props"},"Multiple props"),(0,a.kt)("p",null,"Passing multiple props into a functional component"),(0,a.kt)("p",null,"JSX Spread Operator <Component {\u2026props} />"),(0,a.kt)("p",null,"These two are equivalent ways are the same:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Method 1\nfunction App1() {\n  return <Greeting firstName=\"Ben\" lastName=\"Hector\" />;\n}\n// Method 2\nfunction App2() {\n  const props = {firstName: 'Ben', lastName: 'Hector'};\n  return <Greeting {...props} />;\n}\n")),(0,a.kt)("p",null,"Pick specific props that your component will consume while passing all other props using the spread operator:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const Button = props => {\n  const { kind, ...other } = props;\n  const className = kind === "primary" ? "PrimaryButton" : "SecondaryButton";\n  return <button className={className} {...other} />;\n};\n\nconst App = () => {\n  return (\n    <div>\n      <Button kind="primary" onClick={() => console.log("clicked!")}>\n        Hello World!\n      </Button>\n    </div>\n  );\n};\n')),(0,a.kt)("h2",{id:"hooks"},"Hooks"),(0,a.kt)("h3",{id:"custom-hooks"},"Custom Hooks"),(0,a.kt)("h4",{id:"usemount"},(0,a.kt)("inlineCode",{parentName:"h4"},"useMount")),(0,a.kt)("p",null,"A simple way to fetch data on load is using ",(0,a.kt)("inlineCode",{parentName:"p"},"useEffect"),". ",(0,a.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/hooks-reference.html#useeffect"},"see docs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"useEffect(() => {\n  // fetch request...\n}, [])\n")),(0,a.kt)("p",null,"If we use a custom hook and name it ",(0,a.kt)("inlineCode",{parentName:"p"},"useMount"),", it improves semantics. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const useMount = (callback) => {\n  useEffect(callback, [])\n}\n")),(0,a.kt)("p",null,"We can then implement ",(0,a.kt)("inlineCode",{parentName:"p"},"useMount")," in our component, and when the component re-renders, ",(0,a.kt)("inlineCode",{parentName:"p"},"useMount")," does not execute again."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"useMount(fetch);\n")),(0,a.kt)("h4",{id:"useunmount"},(0,a.kt)("inlineCode",{parentName:"h4"},"useUnmount")),(0,a.kt)("p",null,"We can use ",(0,a.kt)("inlineCode",{parentName:"p"},"useUnmount")," if we want to trigger some logic on component unmount, (like clearing the timer, etc). "),(0,a.kt)("p",null,"However, we need to use ",(0,a.kt)("inlineCode",{parentName:"p"},"useRef")," to keep track of the function reference, otherwise the closure effect of useEffect will remember the first state only."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const useUnmount = (callback) => {\n  const callbackRef = useRef(callback);\n\n  callbackRef.current = callback;\n\n  useEffect(() => {\n    return callbackRef.current()\n  }, [])\n}\n")),(0,a.kt)("p",null,"For example, this correctly logs the last count. If it was done without the useRef/callbackRef, the count would be 0 on unmount."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const Child = () => {\n  const [ count, setCount ] = useState(0)\n\n  useUnmounted(() => {\n    console.log('useUnmounted', count)\n  })\n\n  return (\n    <div>\n      count: {count}\n      <button onClick={() => setCount(count + 1)}>add</button>\n    </div>\n  )\n}\n\nconst UseUnmountedDemo = () => {\n  const [showChild, setShowChild] = useState(true);\n\n  return (\n    <div>\n      { !!showChild && <Child /> }\n      <button onClick={() => setShowChild(false)}>Destroy child</button>\n    </div>\n  )\n}\n")),(0,a.kt)("h4",{id:"useupdateeffect"},"useUpdateEffect"),(0,a.kt)("p",null,"Although this works to print out ",(0,a.kt)("inlineCode",{parentName:"p"},"count")," as state changes,  ",(0,a.kt)("inlineCode",{parentName:"p"},"count")," will also print out \u20180\u2019 as soon as the component is mounted.\nWhat if we want to execute logical code only after the dependency changes?"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function UseUpdateEffectDemo() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    console.log('Count changed', count)\n  }, [ count ])\n\n  return (\n    <div>\n      count: {count}\n      <button onClick={() => setCount(count + 1)}>change</button>\n    </div>\n  )\n}\n")),(0,a.kt)("p",null,"Let's make our custom hook ",(0,a.kt)("inlineCode",{parentName:"p"},"useUpdateEffect"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const useUpdateEffect = function (effectCallback, deps = [])  {\n  const isFirstMount = useRef(false)\n  \n  // ? this may or may not be needed ?\n  // useEffect(() => {\n  //   console.log(isFirstMount.current)\n  //   return () => {\n  //     isFirstMount.current = false\n  //   }\n  // }, [])\n\n  useEffect(() => {\n    // Do not execute effectcallback for the first time\n    if (!isFirstMount.current) {\n      isFirstMount.current = true\n    } else {\n      return effectCallback()\n    }\n  }, deps)\n}\n")),(0,a.kt)("p",null,"With example below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function UseUpdateEffectDemo() {\n  const [count, setCount] = useState(0)\n  \n  useUpdateEffect(() => {\n    console.log('Count changed', count)\n  }, [ count ])\n  \n  return (\n    <div>\n      count: {count}\n      <button onClick={() => setCount(count + 1)}>change</button>\n    </div>\n  )\n")),(0,a.kt)("h4",{id:"usesetstate"},(0,a.kt)("inlineCode",{parentName:"h4"},"useSetState")),(0,a.kt)("p",null,"When we write a classical component, we use ",(0,a.kt)("inlineCode",{parentName:"p"},"this.setState")," to manipulate the data of the component, and ",(0,a.kt)("inlineCode",{parentName:"p"},"setState")," is often more convenient when manipulating object-type data.\nWith regular ",(0,a.kt)("inlineCode",{parentName:"p"},"setState")," functions, we'd likely do something as the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const [ person, setPerson ] = React.useState({\n  name: 'fatfish',\n  age: 100\n})\n// Modify name\nsetPerson({\n  ...person,\n  name: 'medium'\n})\n// Modify age\nsetPerson({\n  ...person,\n  age: 1000\n})\n// Use setState to modify name\nsetState({\n  name: 'medium'\n})\n// Use setState to modify age\nsetState({\n  age: 1000\n})\n")),(0,a.kt)("p",null,"We can also implement a ",(0,a.kt)("inlineCode",{parentName:"p"},"useSetState")," hook to simplify the operation of ",(0,a.kt)("inlineCode",{parentName:"p"},"setPerson")," by putting a wrapper around ",(0,a.kt)("inlineCode",{parentName:"p"},"setState"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const useSetState = (initState) => {\n  const [ state, setState ] = useState(initState)\n  \n  const setMergeState = (value) => {\n    setState((prevValue) => {\n      const newValue = typeof value === 'function' ? value(prevValue) : value\n      return newValue ? { ...prevValue, ...newValue } : prevValue\n    })\n  }\n  \n  return [ state, setMergeState ]\n}\n")),(0,a.kt)("p",null,"Here's an example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function useSetStateDemo() {\n  const [ person, setPerson ] = useSetState({\n    name: 'fatfish',\n    age: 100\n  })\n  // Change the value of person in the normal setting mode\n  const onSetName = () => {\n    setPerson({ name: 'medium' })\n  }\n  //Use the callback function to change the value of person\n  const onSetAge = () => {\n    setPerson((prevAge) => {\n      return {\n        age: prevAge + 10\n      }\n    })\n  }\n  return (\n    <div>\n      <p>name: { person.name }</p>\n      <p>age: { person.age }</p>\n      <button onClick={onSetName}>change name</button>\n      <button onClick={onSetAge}>change age</button>\n    </div>\n  )\n}\n")),(0,a.kt)("p",null,"Credit:\n",(0,a.kt)("a",{parentName:"p",href:"https://fatfish.medium.com/4-custom-react-hooks-every-developer-should-know-106ca78c0bca"},"fatfish - 4 Custom React Hooks Every Developer Should Know")," Medium Member-only"))}p.isMDXComponent=!0}}]);