{"version":3,"sources":["components/check.svg","components/Card.tsx","components/Task.tsx","components/Input.tsx","components/Stats.tsx","components/Tasks.tsx","components/theme.tsx","components/Heading.tsx","components/Switch.tsx","components/Header.tsx","App.tsx","index.tsx"],"names":["module","exports","Card","styled","div","props","theme","card","TextStyle","css","text","Container","Check","background","checked","CheckIcon","img","Label","Strikethrough","Task","id","label","onClick","src","checkIconSvg","style","opacity","InsertInput","input","TaskTextStyle","Input","useState","setLabel","placeholder","type","autoComplete","value","onChange","currentTarget","onKeyUp","keyCode","StatContainer","StatValue","StatLabel","Stat","Divider","Stats","Tasks","colors","dark","light","GlobalStyles","createGlobalStyle","ThemeProvider","darkMode","children","Page","Heading","role","aria-label","Toggle","MoonOverlay","Switch","on","transform","darkModeState","atom","key","default","Header","useRecoilState","setDarkMode","Home","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bde45fb8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check.2bf327f3.svg\";","import styled from 'styled-components'\n\nexport const Card = styled.div`\n    border-radius: 25px;\n    background-color: ${(props) => props.theme.card};\n    box-shadow: 0px 4px 7px rgba(0, 0, 0, 0.1);\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 0 15px;\n`\n","import React from 'react'\nimport styled, {css} from 'styled-components'\nimport checkIconSvg from './check.svg'\nimport {Card} from './Card'\n\nexport const TextStyle = css`\n    font-size: 17px;\n    color: ${(props) => props.theme.text};\n    font-family: inherit;\n`\n\nexport const Container = styled(Card)`\n    height: 50px;\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`\n\nconst Check = styled.div<{checked: boolean}>`\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    margin-right: 15px;\n    transition: 0.2s all ease-in-out;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    background-color: ${(props) => props.theme.background};\n    cursor: pointer;\n\n    ${(props) =>\n        props.checked &&\n        css`\n            background-color: transparent;\n        `}\n`\n\nconst CheckIcon = styled.img`\n    transition: 0.1s opacity ease-in-out;\n`\n\nconst Label = styled.div`\n    position: relative;\n    ${TextStyle}\n`\n\nconst Strikethrough = styled.div<{checked: boolean}>`\n    position: absolute;\n    top: 50%;\n    left: -3px;\n    right: -3px;\n    height: 2px;\n    background-color: ${(props) => props.theme.text};\n    border-radius: 2px;\n    transform: scaleX(0);\n    transform-origin: center left;\n    transition: 0.1s all ease-in-out;\n\n    ${(props) =>\n        props.checked &&\n        css`\n            transform: scaleX(1);\n        `};\n`\n\nexport const Task: React.FC<{id: number}> = ({id}) => {\n    const complete = false\n    const label = `Example task ${id}`\n\n    return (\n        <Container\n            onClick={() => {\n                // Toggle completed\n            }}\n        >\n            <Check checked={complete}>\n                <CheckIcon\n                    src={checkIconSvg}\n                    style={{opacity: complete ? 1 : 0}}\n                />\n            </Check>\n            <Label>\n                {label}\n                <Strikethrough checked={complete} />\n            </Label>\n        </Container>\n    )\n}\n","import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport {Container as TaskContainer, TextStyle as TaskTextStyle} from './Task'\n\nconst InsertInput = styled.input`\n    width: 100%;\n    height: 100%;\n    appearance: none;\n    border: 0;\n    background-color: transparent;\n    outline: none;\n    -webkit-appearance: textfield;\n    ${TaskTextStyle};\n\n    ::-webkit-search-decoration,\n    ::-webkit-search-cancel-button {\n        -webkit-appearance: none;\n    }\n`\n\nexport const Input: React.FC = () => {\n    const [label, setLabel] = useState('')\n\n    return (\n        <TaskContainer>\n            <InsertInput\n                placeholder=\"Insert a new task...\"\n                type=\"search\"\n                autoComplete=\"off\"\n                value={label}\n                onChange={({currentTarget}) => {\n                    setLabel(currentTarget.value)\n                }}\n                onKeyUp={({keyCode}) => {\n                    if (keyCode === 13) {\n                        // Insert new task\n                        setLabel('')\n                    }\n                }}\n            />\n        </TaskContainer>\n    )\n}\n","import React from 'react'\nimport {Card} from './Card'\nimport styled from 'styled-components'\n\nconst StatContainer = styled.div`\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: ${(props) => props.theme.text};\n`\n\nconst StatValue = styled.div`\n    font-size: 20px;\n    font-weight: 600;\n    margin-bottom: 5px;\n`\n\nconst StatLabel = styled.div`\n    font-size: 11px;\n    text-transform: uppercase;\n`\n\nconst Stat: React.FC<{label: string; value: string | number}> = ({\n    label,\n    value,\n}) => {\n    return (\n        <StatContainer>\n            <StatValue>{value}</StatValue>\n            <StatLabel>{label}</StatLabel>\n        </StatContainer>\n    )\n}\n\nconst Divider = styled.div`\n    width: 1px;\n    height: 42px;\n    background-color: ${(props) => props.theme.text};\n    opacity: 0.3;\n`\n\nconst Container = styled(Card)`\n    padding-top: 15px;\n    padding-bottom: 15px;\n    margin-bottom: 20px;\n`\n\nexport const Stats: React.FC = () => {\n    return (\n        <Container>\n            <Stat label=\"Tasks Complete\" value=\"1\" />\n            <Divider />\n            <Stat label=\"Tasks Remaining\" value=\"3\" />\n        </Container>\n    )\n}\n","import React from 'react'\nimport {Task} from './Task'\n\nexport const Tasks: React.FC = () => {\n    return (\n        <div>\n            <Task id={0} />\n            <Task id={1} />\n            <Task id={2} />\n            <Task id={3} />\n        </div>\n    )\n}\n","import React from 'react'\nimport styled, {\n    ThemeProvider as StyledThemeProvider,\n    createGlobalStyle,\n} from 'styled-components'\n\nexport const colors = {\n    dark: {\n        background: '#20252a',\n        card: '#404348',\n        text: '#dce1e8',\n    },\n    light: {\n        background: '#e9ecf3',\n        card: '#ffffff',\n        text: '#20252a',\n    },\n}\n\nexport const GlobalStyles = createGlobalStyle`\n    body {\n        background-color: ${(props: any) => props.theme.background};\n        color: ${(props: any) => props.theme.text};\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        min-height: 100vh;\n        box-sizing: border-box;\n        font-family: Sen;\n        user-select: none;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        margin: 0;\n    }\n\n    #root {\n        width: 100vw;\n    }\n\n    * {\n        transition: 0.2s color ease-in-out, 0.2s background-color ease-in-out;\n    }\n`\n\ntype ThemeProviderProps = {darkMode: boolean}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({\n    darkMode,\n    children,\n}) => {\n    return (\n        <StyledThemeProvider theme={darkMode ? colors.dark : colors.light}>\n            {children}\n        </StyledThemeProvider>\n    )\n}\n\nexport const Page = styled.div`\n    width: 100%;\n    max-width: 560px;\n    padding: 20px;\n    box-sizing: border-box;\n    margin: 0 auto;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    font-family: 'Playfair Display', serif;\n    font-size: 47px;\n    font-weight: 600;\n    letter-spacing: 2px;\n    color: ${(props) => props.theme.text};\n`\n\nexport const Heading: React.FC = () => {\n    return (\n        <Container>\n            <span role=\"img\" aria-label=\"Taskhero logo\">\n                🦸‍♂️\n            </span>{' '}\n            Taskhero\n        </Container>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    width: 60px;\n    height: 30px;\n    border-radius: 25px;\n    background-color: ${(props) => props.theme.card};\n    box-sizing: border-box;\n    padding: 4px;\n    cursor: pointer;\n    box-shadow: 0px 4px 7px rgba(0, 0, 0, 0.1);\n`\n\nconst Toggle = styled.div`\n    width: 22px;\n    height: 22px;\n    border-radius: 50%;\n    background-color: #ffc207;\n    transition: 0.2s all ease-out;\n    position: relative;\n`\n\nconst MoonOverlay = styled.div`\n    position: absolute;\n    top: 50%;\n    margin-top: -10px;\n    left: -4px;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: ${(props) => props.theme.card};\n    transform-origin: left center;\n    transition: 0.2s all ease-out;\n`\n\ntype SwitchProps = {\n    value: boolean\n    onChange: (value: boolean) => void\n}\n\nexport const Switch: React.FC<SwitchProps> = ({value: on, onChange}) => (\n    <Container onClick={() => onChange(!on)}>\n        <Toggle\n            style={{\n                transform: `translateX(${on ? 30 : 0}px)`,\n            }}\n        >\n            <MoonOverlay\n                style={{\n                    transform: `scale(${on ? 1 : 0})`,\n                }}\n            />\n        </Toggle>\n    </Container>\n)\n","import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport {Heading} from './Heading'\nimport {Switch} from './Switch'\nimport {atom, useRecoilState} from 'recoil'\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding: 30px 0;\n`\n\nconst darkModeState = atom({\n    key: 'darkMode',\n    default: true,\n});\n\nexport const Header: React.FC = () => {\n    const [darkMode, setDarkMode] = useRecoilState(darkModeState)\n\n    return (\n        <Container>\n            <Heading />\n            <Switch value={darkMode} onChange={setDarkMode} />\n        </Container>\n    )\n}\n","import React from 'react'\nimport {Input} from './components/Input'\nimport {Stats} from './components/Stats'\nimport {Tasks} from './components/Tasks'\nimport {ThemeProvider, GlobalStyles, Page} from './components/theme'\nimport {Header} from './components/Header'\n\nconst Home = () => {\n    return (\n        <Page>\n            <Header />\n            <Stats />\n            <Tasks />\n            <Input />\n        </Page>\n    )\n}\n\nconst App = () => {\n    return (\n        <ThemeProvider darkMode={true}>\n            <GlobalStyles />\n            <Home />\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {RecoilRoot} from 'recoil';\n\n// import RecoilizeDebugger from 'recoilize';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <RecoilRoot>\n            {/* <RecoilizeDebugger /> */}\n            <App />\n        </RecoilRoot>\n    </React.StrictMode>,\n    document.getElementById('root'),\n)\n"],"sourceRoot":""}